{"version":3,"sources":["components/AddTodo.js","components/ToDo.js","components/ToDoList.js","App.js","reducer.js","index.js"],"names":["connect","dispatch","addToDo","text","id","type","payload","todo","useState","textVal","setTextVal","handleSubmit","e","preventDefault","length","console","log","Math","floor","random","className","action","onSubmit","value","onChange","target","onClick","ownProps","deleteToDo","updateToDo","checked","style","display","state","todos","map","App","initState","reducer","filter","newTodos","sort","a","b","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAgDeA,cAAQ,MAhBI,SAACC,GACxB,MAAO,CACHC,QAAS,SAACC,EAAMC,GACZH,EAAS,CACLI,KAAM,WACNC,QAAS,CACLC,KAAM,CACFH,GAAIA,EACJD,KAAMA,UAQfH,EA7CC,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QAAc,EACCM,mBAAS,IADV,mBACtBC,EADsB,KACbC,EADa,KAGvBC,EAAe,SAACC,GAGlB,GAFAA,EAAEC,iBAEEJ,EAAQK,OAAS,EAAG,CACpBC,QAAQC,IAAIP,GACZ,IAAML,EAAKa,KAAKC,MAAsB,IAAhBD,KAAKE,SAAmB,GAC9CjB,EAAQO,EAASL,GAEjBM,EAAW,MAKnB,OACI,qBAAKU,UAAU,qCAAf,SACI,uBAAMA,UAAU,qCAAqCC,OAAO,GAAGC,SAAUX,EAAzE,UACI,uBAAON,KAAK,OAAOkB,MAAOd,EAASe,SAAU,SAACZ,GAAD,OAAOF,EAAWE,EAAEa,OAAOF,UACxE,wBAAQH,UAAU,oBAAoBf,KAAK,SAASqB,QAASf,EAA7D,+BCmBDX,cAAQ,MAvBI,SAACC,EAAU0B,GAClC,MAAO,CACHC,WAAY,WACR3B,EAAS,CACLI,KAAM,cACNC,QAAS,CACLF,GAAIuB,EAASvB,OAIzByB,WAAY,WACR5B,EAAS,CACLI,KAAM,cACNC,QAAS,CACLF,GAAIuB,EAASvB,UASlBJ,EAtCF,SAAC,GAA+C,IAA7CG,EAA4C,EAA5CA,KAAM2B,EAAsC,EAAtCA,QAASF,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACvC,OAEI,sBAAKT,UAAU,kDAAf,UACI,oBAAIW,MAAO,CAAEC,QAAS,UAAtB,SAAmC7B,IACnC,gCACI,wBAAQiB,UAAWU,EAAU,kBAAoB,eAAgBJ,QAASG,EAA1E,SAAuFC,EAAU,OAAS,UAC1G,wBAAQV,UAAU,iBAAiBM,QAASE,EAA5C,0BCYD5B,eANS,SAACiC,GACrB,MAAO,CACHC,MAAOD,EAAMC,SAINlC,EApBE,SAAC,GAAe,IAAbkC,EAAY,EAAZA,MAChB,OACI,qBAAKd,UAAU,WAAf,SACKc,EAAMC,KAAI,SAAA5B,GACP,OACI,cAAC,EAAD,CAAoBH,GAAIG,EAAKH,GAAID,KAAMI,EAAKJ,KAAM2B,QAASvB,EAAKuB,SAArDvB,EAAKH,YCMrBgC,MAVf,WACE,OACE,sBAAKhB,UAAU,4CAAf,UACE,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,eCTAiB,EAAY,CACdH,MAAO,CACH,CAAE9B,GAAI,IAAKD,KAAM,eAAgB2B,SAAS,GAC1C,CAAE1B,GAAI,KAAMD,KAAM,qBAAsB2B,SAAS,KAsD1CQ,EAlDC,WAAgC,IAA/BL,EAA8B,uDAAtBI,EAAWhB,EAAW,uCAC3C,OAAQA,EAAOhB,MACX,IAAK,WAED,OADAU,QAAQC,IAAI,cAAeK,EAAOf,QAAQC,MACnC,2BACA0B,GADP,IAEIC,MAAM,CAAEb,EAAOf,QAAQC,MAAlB,mBAA2B0B,EAAMC,UAE9C,IAAK,cAED,OADAnB,QAAQC,IAAI,iBAAkBK,EAAOf,QAAQF,IACtC,2BACA6B,GADP,IAEIC,MAAOD,EAAMC,MAAMK,QAAO,SAAAhC,GAAI,OAAIA,EAAKH,KAAOiB,EAAOf,QAAQF,QAErE,IAAK,cACDW,QAAQC,IAAI,gBAAiBK,EAAOf,QAAQF,IAE5C,IAAMoC,EAAWP,EAAMC,MAAMC,KAAI,SAAA5B,GAK7B,OAJIA,EAAKH,KAAOiB,EAAOf,QAAQF,KAC3BG,EAAKuB,SAAWvB,EAAKuB,SAGlBvB,KAiBX,OAbAiC,EAASC,MAAK,SAACC,EAAGC,GACd,OAAID,EAAEZ,UAAYa,EAAEb,QACT,GAEDY,EAAEZ,SAAWa,EAAEb,SACb,EAGL,KAGXf,QAAQC,IAAIwB,GAEL,2BACAP,GADP,IAEIC,MAAOM,IAGf,QACI,OAAOP,I,OC5CbW,EAAQC,YAAYP,GAE1BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.2b0ff706.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AddTodo = ({ addToDo }) => {\r\n    const [textVal, setTextVal] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (textVal.length > 0) {\r\n            console.log(textVal);\r\n            const id = Math.floor(Math.random() * 10000 + 1);\r\n            addToDo(textVal, id);\r\n\r\n            setTextVal('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex flex-row align-items-center\">\r\n            <form className=\"d-flex flex-row align-items-center\" action=\"\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={textVal} onChange={(e) => setTextVal(e.target.value)} />\r\n                <button className=\"btn btn-secondary\" type='submit' onClick={handleSubmit} >Add To Do</button>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToDo: (text, id) => {\r\n            dispatch({\r\n                type: 'ADD_TODO',\r\n                payload: {\r\n                    todo: {\r\n                        id: id,\r\n                        text: text\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTodo)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst ToDo = ({ text, checked, deleteToDo, updateToDo }) => {\r\n    return (\r\n\r\n        <div className=\"my-card d-flex flex-row justify-content-between\">\r\n            <h4 style={{ display: \"inline\" }}>{text}</h4>\r\n            <div>\r\n                <button className={checked ? \"btn btn-success\" : \"btn btn-dark\"} onClick={updateToDo}>{checked ? \"Done\" : \"Check\"}</button>\r\n                <button className=\"btn btn-danger\" onClick={deleteToDo}>Del</button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        deleteToDo: () => {\r\n            dispatch({\r\n                type: 'DELETE_TODO',\r\n                payload: {\r\n                    id: ownProps.id\r\n                }\r\n            })\r\n        },\r\n        updateToDo: () => {\r\n            dispatch({\r\n                type: 'UPDATE_TODO',\r\n                payload: {\r\n                    id: ownProps.id\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ToDo)\r\n","import { connect } from 'react-redux'\r\nimport ToDo from './ToDo'\r\n\r\nconst ToDoList = ({ todos }) => {\r\n    return (\r\n        <div className=\"w-75 p-3\">\r\n            {todos.map(todo => {\r\n                return (\r\n                    <ToDo key={todo.id} id={todo.id} text={todo.text} checked={todo.checked} />\r\n                )\r\n            })\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        todos: state.todos\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToDoList)\r\n","import './App.css';\nimport AddTodo from './components/AddTodo'\nimport ToDoList from './components/ToDoList'\n\nfunction App() {\n  return (\n    <div className=\"App d-flex flex-column align-items-center\">\n      <h1>To do App w/Redux</h1>\n      <AddTodo />\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","const initState = {\r\n    todos: [\r\n        { id: 205, text: \"Wash the Car\", checked: false },\r\n        { id: 6453, text: \"Take out the trash\", checked: false }\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            console.log(\"Adding todo\", action.payload.todo)\r\n            return {\r\n                ...state,\r\n                todos: [action.payload.todo, ...state.todos]\r\n            }\r\n        case \"DELETE_TODO\":\r\n            console.log(\"Deleting todo \", action.payload.id)\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.payload.id)\r\n            }\r\n        case \"UPDATE_TODO\":\r\n            console.log(\"Updating todo\", action.payload.id)\r\n\r\n            const newTodos = state.todos.map(todo => {\r\n                if (todo.id === action.payload.id) {\r\n                    todo.checked = !todo.checked;\r\n                }\r\n\r\n                return todo;\r\n\r\n            })\r\n\r\n            newTodos.sort((a, b) => {\r\n                if (a.checked && !b.checked) {\r\n                    return 1;\r\n                }\r\n                else if (!a.checked && b.checked) {\r\n                    return -1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n\r\n            console.log(newTodos);\r\n\r\n            return {\r\n                ...state,\r\n                todos: newTodos\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reducer from \"./reducer.js\"\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}